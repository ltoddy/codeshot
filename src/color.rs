use std::fmt;
use std::str::FromStr;

use image::Rgb;

use crate::error::Error;

macro_rules! hex {
    ($color: expr) => {{
        let color = $color.trim_start_matches('#');
        let first = color[0..2].parse::<u8>().unwrap();
        let second = color[2..4].parse::<u8>().unwrap();
        let third = color[4..6].parse::<u8>().unwrap();
        [first, second, third]
    }};
}

// see more: https://www.w3schools.com/cssref/css_colors.asp
#[derive(Debug, Clone, Copy)]
pub enum Color {
    AliceBlue,
    AntiqueWhite,
    Aqua,
    Aquamarine,
    Azure,
    Beige,
    Bisque,
    Black,
    BlanchedAlmond,
    Blue,
    BlueViolet,
    Brown,
    BurlyWood,
    CadetBlue,
    Chartreuse,
    Chocolate,
    Coral,
    CornflowerBlue,
    Cornsilk,
    Crimson,
    Cyan,
    DarkBlue,
    DarkCyan,
    DarkGoldenRod,
    DarkGray,
    DarkGrey,
    DarkGreen,
    DarkKhaki,
    DarkMagenta,
    DarkOliveGreen,
    DarkOrange,
    DarkOrchid,
    DarkRed,
    DarkSalmon,
    DarkSeaGreen,
    DarkSlateBlue,
    DarkSlateGray,
    DarkSlateGrey,
    DarkTurquoise,
    DarkViolet,
    DeepPink,
    DeepSkyBlue,
    DimGray,
    DimGrey,
    DodgerBlue,
    FireBrick,
    FloralWhite,
    ForestGreen,
    Fuchsia,
    Gainsboro,
    GhostWhite,
    Gold,
    GoldenRod,
    Gray,
    Grey,
    Green,
    GreenYellow,
    HoneyDew,
    HotPink,
    IndianRed,
    Indigo,
    Ivory,
    Khaki,
    Lavender,
    LavenderBlush,
    LawnGreen,
    LemonChiffon,
    LightBlue,
    LightCoral,
    LightCyan,
    LightGoldenRodYellow,
    LightGray,
    LightGrey,
    LightGreen,
    LightPink,
    LightSalmon,
    LightSeaGreen,
    LightSkyBlue,
    LightSlateGray,
    LightSlateGrey,
    LightSteelBlue,
    LightYellow,
    Lime,
    LimeGreen,
    Linen,
    Magenta,
    Maroon,
    MediumAquaMarine,
    MediumBlue,
    MediumOrchid,
    MediumPurple,
    MediumSeaGreen,
    MediumSlateBlue,
    MediumSpringGreen,
    MediumTurquoise,
    MediumVioletRed,
    MidnightBlue,
    MintCream,
    MistyRose,
    Moccasin,
    NavajoWhite,
    Navy,
    OldLace,
    Olive,
    OliveDrab,
    Orange,
    OrangeRed,
    Orchid,
    PaleGoldenRod,
    PaleGreen,
    PaleTurquoise,
    PaleVioletRed,
    PapayaWhip,
    PeachPuff,
    Peru,
    Pink,
    Plum,
    PowderBlue,
    Purple,
    RebeccaPurple,
    Red,
    RosyBrown,
    RoyalBlue,
    SaddleBrown,
    Salmon,
    SandyBrown,
    SeaGreen,
    SeaShell,
    Sienna,
    Silver,
    SkyBlue,
    SlateBlue,
    SlateGray,
    SlateGrey,
    Snow,
    SpringGreen,
    SteelBlue,
    Tan,
    Teal,
    Thistle,
    Tomato,
    Turquoise,
    Violet,
    Wheat,
    White,
    WhiteSmoke,
    Yellow,
    YellowGreen,
}

impl Color {
    pub fn into_rgb(self) -> Rgb<u8> {
        match self {
            Color::AliceBlue => Rgb(hex!("#F0F8FF")),
            Color::AntiqueWhite => Rgb(hex!("#FAEBD7")),
            Color::Aqua => Rgb(hex!("#00FFFF")),
            Color::Aquamarine => Rgb(hex!("#7FFFD4")),
            Color::Azure => Rgb(hex!("#F0FFFF")),
            Color::Beige => Rgb(hex!("#F5F5DC")),
            Color::Bisque => Rgb(hex!("#FFE4C4")),
            Color::Black => Rgb(hex!("#000000")),
            Color::BlanchedAlmond => Rgb(hex!("#FFEBCD")),
            Color::Blue => Rgb(hex!("#0000FF")),
            Color::BlueViolet => Rgb(hex!("#8A2BE2")),
            Color::Brown => Rgb(hex!("#A52A2A")),
            Color::BurlyWood => Rgb(hex!("#DEB887")),
            Color::CadetBlue => Rgb(hex!("#5F9EA0")),
            Color::Chartreuse => Rgb(hex!("#7FFF00")),
            Color::Chocolate => Rgb(hex!("#D2691E")),
            Color::Coral => Rgb(hex!("#FF7F50")),
            Color::CornflowerBlue => Rgb(hex!("#6495ED")),
            Color::Cornsilk => Rgb(hex!("#FFF8DC")),
            Color::Crimson => Rgb(hex!("#DC143C")),
            Color::Cyan => Rgb(hex!("#00FFFF")),
            Color::DarkBlue => Rgb(hex!("#00008B")),
            Color::DarkCyan => Rgb(hex!("#008B8B")),
            Color::DarkGoldenRod => Rgb(hex!("#B8860B")),
            Color::DarkGray => Rgb(hex!("#A9A9A9")),
            Color::DarkGrey => Rgb(hex!("#A9A9A9")),
            Color::DarkGreen => Rgb(hex!("#006400")),
            Color::DarkKhaki => Rgb(hex!("#BDB76B")),
            Color::DarkMagenta => Rgb(hex!("#8B008B")),
            Color::DarkOliveGreen => Rgb(hex!("#556B2F")),
            Color::DarkOrange => Rgb(hex!("#FF8C00")),
            Color::DarkOrchid => Rgb(hex!("#9932CC")),
            Color::DarkRed => Rgb(hex!("#8B0000")),
            Color::DarkSalmon => Rgb(hex!("#E9967A")),
            Color::DarkSeaGreen => Rgb(hex!("#8FBC8F")),
            Color::DarkSlateBlue => Rgb(hex!("#483D8B")),
            Color::DarkSlateGray => Rgb(hex!("#2F4F4F")),
            Color::DarkSlateGrey => Rgb(hex!("#2F4F4F")),
            Color::DarkTurquoise => Rgb(hex!("#00CED1")),
            Color::DarkViolet => Rgb(hex!("#9400D3")),
            Color::DeepPink => Rgb(hex!("#FF1493")),
            Color::DeepSkyBlue => Rgb(hex!("#00BFFF")),
            Color::DimGray => Rgb(hex!("#696969")),
            Color::DimGrey => Rgb(hex!("#696969")),
            Color::DodgerBlue => Rgb(hex!("#1E90FF")),
            Color::FireBrick => Rgb(hex!("#B22222")),
            Color::FloralWhite => Rgb(hex!("#FFFAF0")),
            Color::ForestGreen => Rgb(hex!("#228B22")),
            Color::Fuchsia => Rgb(hex!("#FF00FF")),
            Color::Gainsboro => Rgb(hex!("#DCDCDC")),
            Color::GhostWhite => Rgb(hex!("#F8F8FF")),
            Color::Gold => Rgb(hex!("#FFD700")),
            Color::GoldenRod => Rgb(hex!("#DAA520")),
            Color::Gray => Rgb(hex!("#808080")),
            Color::Grey => Rgb(hex!("#808080")),
            Color::Green => Rgb(hex!("#008000")),
            Color::GreenYellow => Rgb(hex!("#ADFF2F")),
            Color::HoneyDew => Rgb(hex!("#F0FFF0")),
            Color::HotPink => Rgb(hex!("#FF69B4")),
            Color::IndianRed => Rgb(hex!("#CD5C5C")),
            Color::Indigo => Rgb(hex!("#4B0082")),
            Color::Ivory => Rgb(hex!("#FFFFF0")),
            Color::Khaki => Rgb(hex!("#F0E68C")),
            Color::Lavender => Rgb(hex!("#E6E6FA")),
            Color::LavenderBlush => Rgb(hex!("#FFF0F5")),
            Color::LawnGreen => Rgb(hex!("#7CFC00")),
            Color::LemonChiffon => Rgb(hex!("#FFFACD")),
            Color::LightBlue => Rgb(hex!("#ADD8E6")),
            Color::LightCoral => Rgb(hex!("#F08080")),
            Color::LightCyan => Rgb(hex!("#E0FFFF")),
            Color::LightGoldenRodYellow => Rgb(hex!("#FAFAD2")),
            Color::LightGray => Rgb(hex!("#D3D3D3")),
            Color::LightGrey => Rgb(hex!("#D3D3D3")),
            Color::LightGreen => Rgb(hex!("#90EE90")),
            Color::LightPink => Rgb(hex!("#FFB6C1")),
            Color::LightSalmon => Rgb(hex!("#FFA07A")),
            Color::LightSeaGreen => Rgb(hex!("#20B2AA")),
            Color::LightSkyBlue => Rgb(hex!("#87CEFA")),
            Color::LightSlateGray => Rgb(hex!("#778899")),
            Color::LightSlateGrey => Rgb(hex!("#778899")),
            Color::LightSteelBlue => Rgb(hex!("#B0C4DE")),
            Color::LightYellow => Rgb(hex!("#FFFFE0")),
            Color::Lime => Rgb(hex!("#00FF00")),
            Color::LimeGreen => Rgb(hex!("#32CD32")),
            Color::Linen => Rgb(hex!("#FAF0E6")),
            Color::Magenta => Rgb(hex!("#FF00FF")),
            Color::Maroon => Rgb(hex!("#800000")),
            Color::MediumAquaMarine => Rgb(hex!("#66CDAA")),
            Color::MediumBlue => Rgb(hex!("#0000CD")),
            Color::MediumOrchid => Rgb(hex!("#BA55D3")),
            Color::MediumPurple => Rgb(hex!("#9370DB")),
            Color::MediumSeaGreen => Rgb(hex!("#3CB371")),
            Color::MediumSlateBlue => Rgb(hex!("#7B68EE")),
            Color::MediumSpringGreen => Rgb(hex!("#00FA9A")),
            Color::MediumTurquoise => Rgb(hex!("#48D1CC")),
            Color::MediumVioletRed => Rgb(hex!("#C71585")),
            Color::MidnightBlue => Rgb(hex!("#191970")),
            Color::MintCream => Rgb(hex!("#F5FFFA")),
            Color::MistyRose => Rgb(hex!("#FFE4E1")),
            Color::Moccasin => Rgb(hex!("#FFE4B5")),
            Color::NavajoWhite => Rgb(hex!("#FFDEAD")),
            Color::Navy => Rgb(hex!("#000080")),
            Color::OldLace => Rgb(hex!("#FDF5E6")),
            Color::Olive => Rgb(hex!("#808000")),
            Color::OliveDrab => Rgb(hex!("#6B8E23")),
            Color::Orange => Rgb(hex!("#FFA500")),
            Color::OrangeRed => Rgb(hex!("#FF4500")),
            Color::Orchid => Rgb(hex!("#DA70D6")),
            Color::PaleGoldenRod => Rgb(hex!("#EEE8AA")),
            Color::PaleGreen => Rgb(hex!("#98FB98")),
            Color::PaleTurquoise => Rgb(hex!("#AFEEEE")),
            Color::PaleVioletRed => Rgb(hex!("#DB7093")),
            Color::PapayaWhip => Rgb(hex!("#FFEFD5")),
            Color::PeachPuff => Rgb(hex!("#FFDAB9")),
            Color::Peru => Rgb(hex!("#CD853F")),
            Color::Pink => Rgb(hex!("#FFC0CB")),
            Color::Plum => Rgb(hex!("#DDA0DD")),
            Color::PowderBlue => Rgb(hex!("#B0E0E6")),
            Color::Purple => Rgb(hex!("#800080")),
            Color::RebeccaPurple => Rgb(hex!("#663399")),
            Color::Red => Rgb(hex!("#FF0000")),
            Color::RosyBrown => Rgb(hex!("#BC8F8F")),
            Color::RoyalBlue => Rgb(hex!("#4169E1")),
            Color::SaddleBrown => Rgb(hex!("#8B4513")),
            Color::Salmon => Rgb(hex!("#FA8072")),
            Color::SandyBrown => Rgb(hex!("#F4A460")),
            Color::SeaGreen => Rgb(hex!("#2E8B57")),
            Color::SeaShell => Rgb(hex!("#FFF5EE")),
            Color::Sienna => Rgb(hex!("#A0522D")),
            Color::Silver => Rgb(hex!("#C0C0C0")),
            Color::SkyBlue => Rgb(hex!("#87CEEB")),
            Color::SlateBlue => Rgb(hex!("#6A5ACD")),
            Color::SlateGray => Rgb(hex!("#708090")),
            Color::SlateGrey => Rgb(hex!("#708090")),
            Color::Snow => Rgb(hex!("#FFFAFA")),
            Color::SpringGreen => Rgb(hex!("#00FF7F")),
            Color::SteelBlue => Rgb(hex!("#4682B4")),
            Color::Tan => Rgb(hex!("#D2B48C")),
            Color::Teal => Rgb(hex!("#008080")),
            Color::Thistle => Rgb(hex!("#D8BFD8")),
            Color::Tomato => Rgb(hex!("#FF6347")),
            Color::Turquoise => Rgb(hex!("#40E0D0")),
            Color::Violet => Rgb(hex!("#EE82EE")),
            Color::Wheat => Rgb(hex!("#F5DEB3")),
            Color::White => Rgb(hex!("#FFFFFF")),
            Color::WhiteSmoke => Rgb(hex!("#F5F5F5")),
            Color::Yellow => Rgb(hex!("#FFFF00")),
            Color::YellowGreen => Rgb(hex!("#9ACD32")),
        }
    }
}

impl FromStr for Color {
    type Err = Error;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "AliceBlue" => Ok(Color::AliceBlue),
            "AntiqueWhite" => Ok(Color::AntiqueWhite),
            "Aqua" => Ok(Color::Aqua),
            _ => unimplemented!(),
        }
    }
}

impl fmt::Display for Color {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        std::fmt::Debug::fmt(self, f)
    }
}
